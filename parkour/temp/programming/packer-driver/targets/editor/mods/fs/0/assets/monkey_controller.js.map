{"version":3,"sources":["file:///Users/frederickmo/Documents/GitHub/NaughtyMonkey/parkour/assets/monkey_controller.ts"],"names":["v2","Animation","_decorator","Component","Input","input","Collider2D","Contact2DType","RigidBody2D","find","ccclass","property","monkey_state","monkey_controller","Number","onBeginContact","selfCollider","otherCollider","contact","ani","node","getComponent","monkey_rgd","ltree","ltree_rgd","ltree2","ltree2_rgd","rtree","rtree_rgd","rtree2","rtree2_rgd","bee","bee_rgd","bird","bird_rgd","tag","bird_animation","play","buff_count","linearVelocity","mk_state","DEAD","i","NumOfHedgehogs","HedgeHogNode","Hedgehog_rgd","console","log","onEndContact","onPreSolve","onPostSolve","start","ALIVE","on","EventType","MOUSE_DOWN","event","getState","isPlaying","x","getPosition","setScale","collider","BEGIN_CONTACT","update","deltaTime"],"mappings":"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","sourcesContent":["\nimport {v2, Animation,_decorator, Component, Node, Sprite, Input, systemEvent, input, Collider2D, Contact2DType, IPhysics2DContact, RealInterpolationMode, RigidBody2D, v3, find } from 'cc';\nconst { ccclass, property } = _decorator;\n\n/**\n * Predefined variables\n * Name = monkey_controller\n * DateTime = Sun Mar 13 2022 21:48:57 GMT+0800 (中国标准时间)\n * Author = AlexiosLHB\n * FileBasename = monkey_controller.ts\n * FileBasenameNoExtension = monkey_controller\n * URL = db://assets/monkey_controller.ts\n * ManualUrl = https://docs.cocos.com/creator/3.4/manual/zh/\n *\n */\n export enum monkey_state{\n     ALIVE,\n     DEAD,\n     INVINCIBLE // 无敌模式\n}\n \n@ccclass('monkey_controller')\nexport class monkey_controller extends Component {\n\n    mk_state:monkey_state\n\n    buff_count: number = 0\n\n    @property(Number)\n    NumOfHedgehogs:number\n    // [1]\n    // dummy = '';\n\n    // [2]\n    // @property\n    // serializableDummy = 0;\n   \n\n    onBeginContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\n        // 只在两个碰撞体开始接触时被调用一次\n\n\n        let ani = this.node.getComponent(Animation);\n        let monkey_rgd = this.node.getComponent(RigidBody2D);\n        let ltree = find(\"Canvas/ltree\");\n        let ltree_rgd = ltree.getComponent(RigidBody2D);\n        let ltree2 = find(\"Canvas/ltree2\");\n        let ltree2_rgd = ltree2.getComponent(RigidBody2D);\n        let rtree = find(\"Canvas/rtree\");\n        let rtree_rgd = rtree.getComponent(RigidBody2D);\n        let rtree2 = find(\"Canvas/rtree2\");\n        let rtree2_rgd = rtree2.getComponent(RigidBody2D);\n        let bee = find(\"Canvas/Bee\");\n        let bee_rgd=bee.getComponent(RigidBody2D);\n        let bird = find(\"Canvas/Bird\");\n        let bird_rgd = bird.getComponent(RigidBody2D);\n\n        // 碰到鸟判定鸟死亡，除此以外判定猴子死亡\n        // TAG == 10 => 鸟的tag是10\n        if (otherCollider.tag == 10) {\n            let bird_animation = bird.getComponent(Animation);\n            bird_animation.play(\"bird_smoke\");\n            this.buff_count++;\n\n            // 积累三个buff之后进入无敌（冲刺）模式\n            if (this.buff_count == 3) {\n                // 无敌模式相关内容还没做\n                // this.mk_state = monkey_state.INVINCIBLE;\n            }\n        } else {\n            monkey_rgd.linearVelocity = v2(0,-25);\n            this.mk_state=monkey_state.DEAD;\n            ltree_rgd.linearVelocity = v2(0,0);\n            ltree2_rgd.linearVelocity= v2(0,0);\n            rtree_rgd.linearVelocity= v2(0,0);\n            rtree2_rgd.linearVelocity= v2(0,0);\n            for(var i =1;i<this.NumOfHedgehogs+1;i++){\n\n                var HedgeHogNode=find(\"Canvas/Hedgehog\"+i);\n\n                var Hedgehog_rgd=HedgeHogNode.getComponent(RigidBody2D);\n                Hedgehog_rgd.linearVelocity= v2(0,0);\n            }\n            bee_rgd.linearVelocity = v2(0,0);\n\n\n            bird_rgd.linearVelocity = v2(0, 0);\n\n\n            ani.play(\"monkey_dying\");\n\n        }\n\n        console.log(\"onBeginContact\");\n\n\n\n\n    }\n    onEndContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\n        // 只在两个碰撞体结束接触时被调用一次\n        console.log('onEndContact');\n    }\n    onPreSolve (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\n        // 每次将要处理碰撞体接触逻辑时被调用\n        console.log('onPreSolve');\n    }\n    onPostSolve (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\n        // 每次处理完碰撞体接触逻辑时被调用\n        console.log('onPostSolve');\n    }\n\n\n    \n    start () {\n        this.mk_state = monkey_state.ALIVE\n        input.on(Input.EventType.MOUSE_DOWN,(event)=>{\n            let ani = this.node.getComponent(Animation);\n            if(ani.getState(\"monkey_runninng\").isPlaying==true)\n            {\n                let x =this.node.getPosition().x\n                if(x>0){\n                 this.node.setScale(0.3,-0.3,0);\n                ani.play(\"monkey_jumpingtoleft\");\n                }\n                else if(x<0){\n                    this.node.setScale(0.3,0.3,0);\n                    ani.play(\"monkey_jumpingtoright\");\n\n                }\n\n            \n               \n                \n            }\n           \n        })\n        let collider = this.getComponent(Collider2D);\n        if (collider) {\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n            // collider.on(Contact2DType.END_CONTACT, this.onEndContact, this);\n            // collider.on(Contact2DType.PRE_SOLVE, this.onPreSolve, this);\n            // collider.on(Contact2DType.POST_SOLVE, this.onPostSolve, this);\n        }\n        // [3]\n    }\n\n \n    \n\n    update (deltaTime: number) {\n        let ani = this.node.getComponent(Animation);\n        if(ani.getState(\"monkey_runninng\").isPlaying==false&&ani.getState(\"monkey_jumpingtoleft\").isPlaying==false&&ani.getState(\"monkey_jumpingtoright\").isPlaying==false&&this.mk_state == monkey_state.ALIVE){\n            ani.play(\"monkey_runninng\");\n        }\n        \n        \n        // [4]\n    }\n}\n\n/**\n * [1] Class member could be defined like this.\n * [2] Use `property` decorator if your want the member to be serializable.\n * [3] Your initialization goes here.\n * [4] Your update function goes here.\n *\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/zh/scripting/\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/zh/scripting/decorator.html\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/zh/scripting/life-cycle-callbacks.html\n */\n"]}