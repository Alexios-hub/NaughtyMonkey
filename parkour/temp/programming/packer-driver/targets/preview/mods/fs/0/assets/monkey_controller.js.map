{"version":3,"sources":["file:///D:/ProjectFiles/cocosCreater/NaughtyMonkey/parkour/assets/monkey_controller.ts"],"names":["v2","Animation","_decorator","Component","Input","input","Collider2D","Contact2DType","RigidBody2D","find","HedgehogController","bananaControl","shieldControl","bananaManager","BeeController","ccclass","property","monkey_state","monkey_controller","Number","onBeginContact","selfCollider","otherCollider","contact","tag","getComponent","BeEaten","bMan","num","eatBanana","die","eatShield","isInvincible","ani","node","monkey_rgd","linearVelocity","mk_state","DEAD","ltree","ltree_rgd","ltree2","ltree2_rgd","rtree","rtree_rgd","rtree2","rtree2_rgd","i","NumOfHedgehogs","HedgeHogNode","Hedgehog_rgd","bee","bee_rgd","play","console","log","onEndContact","onPreSolve","onPostSolve","start","ALIVE","x1","on","EventType","MOUSE_DOWN","event","getState","isPlaying","x","getPosition","setScale","collider","BEGIN_CONTACT","update","deltaTime","position"],"mappings":"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","sourcesContent":["\r\nimport {v2, Animation,_decorator, Component, Node, Sprite, Input, systemEvent, input, Collider2D, Contact2DType, IPhysics2DContact, RealInterpolationMode, RigidBody2D, v3, find, Vec3 } from 'cc';\r\nimport { HedgehogController } from './HedgehogController';\r\nimport { bananaControl } from './script/bananaControl';\r\nimport { shieldControl } from './script/shieldControl';\r\nimport { bananaManager } from './script/bananaManager'\r\nimport { BeeController } from './BeeController';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = monkey_controller\r\n * DateTime = Sun Mar 13 2022 21:48:57 GMT+0800 (中国标准时间)\r\n * Author = AlexiosLHB\r\n * FileBasename = monkey_controller.ts\r\n * FileBasenameNoExtension = monkey_controller\r\n * URL = db://assets/monkey_controller.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.4/manual/zh/\r\n *\r\n */\r\n enum monkey_state{\r\n     ALIVE,\r\n     DEAD\r\n}\r\n \r\n@ccclass('monkey_controller')\r\nexport class monkey_controller extends Component {\r\n    @property(Number)\r\n    NumOfHedgehogs:number\r\n    // [1]\r\n    // dummy = '';\r\n\r\n    // [2]\r\n    // @property\r\n    // serializableDummy = 0;\r\n    mk_state:monkey_state\r\n\r\n    isInvincible: number = 0;\r\n\r\n    onBeginContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        //吃香蕉\r\n        if(otherCollider.tag==10) {\r\n            otherCollider.getComponent(bananaControl).BeEaten();\r\n            let bMan = find('Canvas/BananaManager');\r\n            let num = bMan.getComponent(bananaManager).num;\r\n            if(num == 0){\r\n                this.eatBanana();\r\n            }\r\n            \r\n            return;\r\n        }\r\n        else if(otherCollider.tag==11) { //吃盾\r\n            otherCollider.getComponent(shieldControl).die();\r\n            this.eatShield();\r\n            return;\r\n        }\r\n        \r\n        if(this.isInvincible>0){\r\n            if(otherCollider.tag==0){\r\n                otherCollider.getComponent(HedgehogController).die();\r\n            }\r\n            else if(otherCollider.tag==1){\r\n                otherCollider.getComponent(BeeController).die();\r\n            }\r\n            \r\n            return;\r\n        }\r\n        // 只在两个碰撞体开始接触时被调用一次\r\n        let ani = this.node.getComponent(Animation);\r\n        let monkey_rgd = this.node.getComponent(RigidBody2D);\r\n        monkey_rgd.linearVelocity = v2(0,-25);\r\n        this.mk_state=monkey_state.DEAD;\r\n        let ltree = find(\"Canvas/ltree\");\r\n        let ltree_rgd = ltree.getComponent(RigidBody2D);\r\n        ltree_rgd.linearVelocity = v2(0,0);\r\n        let ltree2 = find(\"Canvas/ltree2\");\r\n        let ltree2_rgd = ltree2.getComponent(RigidBody2D);\r\n        ltree2_rgd.linearVelocity= v2(0,0);\r\n        let rtree = find(\"Canvas/rtree\");\r\n        let rtree_rgd = rtree.getComponent(RigidBody2D);\r\n        rtree_rgd.linearVelocity= v2(0,0);\r\n        let rtree2 = find(\"Canvas/rtree2\");\r\n        let rtree2_rgd = rtree2.getComponent(RigidBody2D);\r\n        rtree2_rgd.linearVelocity= v2(0,0);\r\n        for(var i =1;i<this.NumOfHedgehogs+1;i++){\r\n  \r\n            var HedgeHogNode=find(\"Canvas/Hedgehog\"+i);\r\n    \r\n            var Hedgehog_rgd=HedgeHogNode.getComponent(RigidBody2D);\r\n            Hedgehog_rgd.linearVelocity= v2(0,0);\r\n        }\r\n        let bee = find(\"Canvas/Bee\");\r\n        let bee_rgd=bee.getComponent(RigidBody2D);\r\n        bee_rgd.linearVelocity = v2(0,0);\r\n\r\n        ani.play(\"monkey_dying\");\r\n        console.log(\"onBeginContact\");\r\n\r\n    }\r\n    onEndContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 只在两个碰撞体结束接触时被调用一次\r\n        console.log('onEndContact');\r\n    }\r\n    onPreSolve (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 每次将要处理碰撞体接触逻辑时被调用\r\n        console.log('onPreSolve');\r\n    }\r\n    onPostSolve (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 每次处理完碰撞体接触逻辑时被调用\r\n        console.log('onPostSolve');\r\n    }\r\n\r\n\r\n    \r\n    start () {\r\n        this.mk_state = monkey_state.ALIVE\r\n        let x1=0.3;\r\n        input.on(Input.EventType.MOUSE_DOWN,(event)=>{\r\n            let ani = this.node.getComponent(Animation);\r\n            if(ani.getState(\"monkey_runninng\").isPlaying==true)\r\n            {\r\n                let x =this.node.getPosition().x\r\n                if(x>0){\r\n                    if(this.isInvincible>0){\r\n                        this.node.setScale(2*x1,-2*x1,0);\r\n                    } else {\r\n                        this.node.setScale(0.3,-0.3,0);\r\n                    }\r\n                 \r\n                ani.play(\"monkey_jumpingtoleft\");\r\n                }\r\n                else if(x<0){\r\n                    if(this.isInvincible>0){\r\n                        this.node.setScale(2*x1,2*x1,0)\r\n                    } else {\r\n                        this.node.setScale(0.3,0.3,0);\r\n                    }\r\n                    ani.play(\"monkey_jumpingtoright\");\r\n\r\n                }\r\n\r\n            \r\n               \r\n                \r\n            }\r\n           \r\n        })\r\n        let collider = this.getComponent(Collider2D);\r\n        if (collider) {\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            // collider.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n            // collider.on(Contact2DType.PRE_SOLVE, this.onPreSolve, this);\r\n            // collider.on(Contact2DType.POST_SOLVE, this.onPostSolve, this);\r\n        }\r\n        // [3]\r\n    }\r\n\r\n \r\n    \r\n\r\n    update (deltaTime: number) {\r\n        let ani = this.node.getComponent(Animation);\r\n        if(ani.getState(\"monkey_runninng\").isPlaying==false&&ani.getState(\"monkey_jumpingtoleft\").isPlaying==false&&ani.getState(\"monkey_jumpingtoright\").isPlaying==false&&this.mk_state == monkey_state.ALIVE){\r\n            ani.play(\"monkey_runninng\");\r\n        }\r\n        if(this.isInvincible>0) {\r\n            this.isInvincible-=1;\r\n        }else {\r\n            if(this.node.position.x>0){\r\n                this.node.setScale(0.3,0.3,1);\r\n            } else {\r\n                this.node.setScale(0.3,-0.3,1);\r\n            }\r\n            this.isInvincible=0;\r\n        }\r\n        \r\n        \r\n        // [4]\r\n    }\r\n\r\n    //吃到香蕉\r\n    eatBanana() {\r\n        this.isInvincible = 60*3;\r\n        if(this.node.position.x>0){\r\n            this.node.setScale(0.6,0.6,1);\r\n        } else {\r\n            this.node.setScale(0.6,-0.6,1);\r\n        }\r\n        \r\n    }\r\n\r\n    //吃到盾\r\n    eatShield() {\r\n        this.isInvincible = 60*3;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/zh/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/zh/scripting/decorator.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/zh/scripting/life-cycle-callbacks.html\r\n */\r\n"]}