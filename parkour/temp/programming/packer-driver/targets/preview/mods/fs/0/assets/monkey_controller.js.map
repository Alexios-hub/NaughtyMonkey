{"version":3,"sources":["file:///Users/liuhongbo/Downloads/NaughtyMonkey/parkour/assets/monkey_controller.ts"],"names":["v2","Animation","_decorator","Component","Input","input","Collider2D","Contact2DType","RigidBody2D","find","HedgehogController","bananaControl","shieldControl","bananaManager","BeeController","ccclass","property","monkey_state","monkey_controller","Number","onBeginContact","selfCollider","otherCollider","contact","tag","getComponent","BeEaten","bMan","num","eatBanana","die","eatShield","isInvincible","ani","node","monkey_rgd","ltree","ltree_rgd","ltree2","ltree2_rgd","rtree","rtree_rgd","rtree2","rtree2_rgd","bee","bee_rgd","bird","bird_rgd","bird_animation","play","buff_count","linearVelocity","mk_state","DEAD","i","NumOfHedgehogs","HedgeHogNode","Hedgehog_rgd","console","log","onEndContact","onPreSolve","onPostSolve","start","ALIVE","x1","on","EventType","TOUCH_START","event","getState","isPlaying","x","getPosition","setScale","collider","BEGIN_CONTACT","update","deltaTime","position"],"mappings":"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","sourcesContent":["\r\nimport {v2, Animation,_decorator, Component, Node, Sprite, Input, systemEvent, input, Collider2D, Contact2DType, IPhysics2DContact, RealInterpolationMode, RigidBody2D, v3, find, Vec3 } from 'cc';\r\nimport { HedgehogController } from './HedgehogController';\r\nimport { bananaControl } from './script/bananaControl';\r\nimport { shieldControl } from './script/shieldControl';\r\nimport { bananaManager } from './script/bananaManager'\r\nimport { BeeController } from './BeeController';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = monkey_controller\r\n * DateTime = Sun Mar 13 2022 21:48:57 GMT+0800 (中国标准时间)\r\n * Author = AlexiosLHB\r\n * FileBasename = monkey_controller.ts\r\n * FileBasenameNoExtension = monkey_controller\r\n * URL = db://assets/monkey_controller.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.4/manual/zh/\r\n *\r\n */\r\n export enum monkey_state{\r\n     ALIVE,\r\n     DEAD,\r\n     INVINCIBLE // 无敌模式\r\n}\r\n \r\n@ccclass('monkey_controller')\r\nexport class monkey_controller extends Component {\r\n\r\n    mk_state:monkey_state\r\n\r\n    buff_count: number = 0\r\n\r\n    @property(Number)\r\n    NumOfHedgehogs:number\r\n    // [1]\r\n    // dummy = '';\r\n\r\n    // [2]\r\n    // @property\r\n    // serializableDummy = 0;\r\n   \r\n\r\n    isInvincible: number = 0;\r\n\r\n    onBeginContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        //吃香蕉\r\n        if(otherCollider.tag==12) {\r\n            otherCollider.getComponent(bananaControl).BeEaten();\r\n            let bMan = find('Canvas/BananaManager');\r\n            let num = bMan.getComponent(bananaManager).num;\r\n            if(num == 0){\r\n                this.eatBanana();\r\n            }\r\n            \r\n            return;\r\n        }\r\n        else if(otherCollider.tag==11) { //吃盾\r\n            otherCollider.getComponent(shieldControl).die();\r\n            this.eatShield();\r\n            return;\r\n        }\r\n        \r\n        if(this.isInvincible>0&&otherCollider.tag!=10){\r\n            if(otherCollider.tag==0){\r\n                otherCollider.getComponent(HedgehogController).die();\r\n            }\r\n            else if(otherCollider.tag==1){\r\n                otherCollider.getComponent(BeeController).die();\r\n            }\r\n            \r\n            return;\r\n        }\r\n        // 只在两个碰撞体开始接触时被调用一次\r\n\r\n\r\n        let ani = this.node.getComponent(Animation);\r\n        let monkey_rgd = this.node.getComponent(RigidBody2D);\r\n        let ltree = find(\"Canvas/ltree\");\r\n        let ltree_rgd = ltree.getComponent(RigidBody2D);\r\n        let ltree2 = find(\"Canvas/ltree2\");\r\n        let ltree2_rgd = ltree2.getComponent(RigidBody2D);\r\n        let rtree = find(\"Canvas/rtree\");\r\n        let rtree_rgd = rtree.getComponent(RigidBody2D);\r\n        let rtree2 = find(\"Canvas/rtree2\");\r\n        let rtree2_rgd = rtree2.getComponent(RigidBody2D);\r\n        let bee = find(\"Canvas/Bee\");\r\n        let bee_rgd=bee.getComponent(RigidBody2D);\r\n        let bird = find(\"Canvas/Bird\");\r\n        let bird_rgd = bird.getComponent(RigidBody2D);\r\n\r\n        // 碰到鸟判定鸟死亡，除此以外判定猴子死亡\r\n        // TAG == 10 => 鸟的tag是10\r\n        if (otherCollider.tag == 10) {\r\n            let bird_animation = bird.getComponent(Animation);\r\n            bird_animation.play(\"bird_smoke\");\r\n            this.buff_count++;\r\n\r\n            // 积累三个buff之后进入无敌（冲刺）模式\r\n            if (this.buff_count == 3) {\r\n                // 无敌模式相关内容还没做\r\n                // this.mk_state = monkey_state.INVINCIBLE;\r\n            }\r\n        } else {\r\n            monkey_rgd.linearVelocity = v2(0,-25);\r\n            this.mk_state=monkey_state.DEAD;\r\n            ltree_rgd.linearVelocity = v2(0,0);\r\n            ltree2_rgd.linearVelocity= v2(0,0);\r\n            rtree_rgd.linearVelocity= v2(0,0);\r\n            rtree2_rgd.linearVelocity= v2(0,0);\r\n            for(var i =1;i<this.NumOfHedgehogs+1;i++){\r\n\r\n                var HedgeHogNode=find(\"Canvas/Hedgehog\"+i);\r\n\r\n                var Hedgehog_rgd=HedgeHogNode.getComponent(RigidBody2D);\r\n                Hedgehog_rgd.linearVelocity= v2(0,0);\r\n            }\r\n            bee_rgd.linearVelocity = v2(0,0);\r\n\r\n\r\n            bird_rgd.linearVelocity = v2(0, 0);\r\n\r\n\r\n            ani.play(\"monkey_dying\");\r\n\r\n        }\r\n\r\n        console.log(\"onBeginContact\");\r\n\r\n    }\r\n    onEndContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 只在两个碰撞体结束接触时被调用一次\r\n        console.log('onEndContact');\r\n    }\r\n    onPreSolve (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 每次将要处理碰撞体接触逻辑时被调用\r\n        console.log('onPreSolve');\r\n    }\r\n    onPostSolve (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 每次处理完碰撞体接触逻辑时被调用\r\n        console.log('onPostSolve');\r\n    }\r\n\r\n\r\n    \r\n    start () {\r\n        this.mk_state = monkey_state.ALIVE\r\n        let x1=0.3;\r\n        let ani = this.node.getComponent(Animation);\r\n        input.on(Input.EventType.TOUCH_START,(event)=>{\r\n            \r\n            if(ani.getState(\"monkey_runninng\").isPlaying==true)\r\n            {\r\n                let x =this.node.getPosition().x\r\n                if(x>0){\r\n                    if(this.isInvincible>0){\r\n                        this.node.setScale(2*x1,-2*x1,0);\r\n                    } else {\r\n                        this.node.setScale(0.3,-0.3,0);\r\n                    }\r\n                 \r\n                ani.play(\"monkey_jumpLeft\");\r\n                }\r\n                else if(x<0){\r\n                    if(this.isInvincible>0){\r\n                        this.node.setScale(2*x1,2*x1,0)\r\n                    } else {\r\n                        this.node.setScale(0.3,0.3,0);\r\n                    }\r\n                    ani.play(\"monkey_jumpRight\");\r\n\r\n                }\r\n\r\n            \r\n               \r\n                \r\n            }\r\n           \r\n        },this)\r\n        let collider = this.getComponent(Collider2D);\r\n        if (collider) {\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            // collider.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n            // collider.on(Contact2DType.PRE_SOLVE, this.onPreSolve, this);\r\n            // collider.on(Contact2DType.POST_SOLVE, this.onPostSolve, this);\r\n        }\r\n        // [3]\r\n    }\r\n\r\n \r\n    \r\n\r\n    update (deltaTime: number) {\r\n        let ani = this.node.getComponent(Animation);\r\n        if(ani.getState(\"monkey_runninng\").isPlaying==false&&ani.getState(\"monkey_jumpLeft\").isPlaying==false&&ani.getState(\"monkey_jumpRight\").isPlaying==false&&this.mk_state == monkey_state.ALIVE){\r\n            ani.play(\"monkey_runninng\");\r\n        }\r\n        if(this.isInvincible>0) {\r\n            this.isInvincible-=1;\r\n        }else {\r\n            if(this.node.position.x>0){\r\n                this.node.setScale(0.3,0.3,1);\r\n            } else {\r\n                this.node.setScale(0.3,-0.3,1);\r\n            }\r\n            this.isInvincible=0;\r\n        }\r\n        \r\n        \r\n        // [4]\r\n    }\r\n\r\n    //吃到香蕉\r\n    eatBanana() {\r\n        this.isInvincible = 60*3;\r\n        if(this.node.position.x>0){\r\n            this.node.setScale(0.6,0.6,1);\r\n        } else {\r\n            this.node.setScale(0.6,-0.6,1);\r\n        }\r\n        \r\n    }\r\n\r\n    //吃到盾\r\n    eatShield() {\r\n        this.isInvincible = 60*3;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.4/manual/zh/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.4/manual/zh/scripting/decorator.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.4/manual/zh/scripting/life-cycle-callbacks.html\r\n */\r\n"]}